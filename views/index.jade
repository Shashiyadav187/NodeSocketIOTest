extends layout

block content
  h1= title
  p Welcome to #{title}

  hr

  #serverStatus

      .one-third.column

        h3 Server
        
        p Time:                     <span id='timeUTC'     class='dataValue'></span>
        p Process uptime (sec):     <span id='uptime'      class='dataValue'></span>
        p Client count:             <span id='clientCount' class='dataValue'></span>

      .one-third.column
        
        h3 Memory Usage
        
        p Memory resident set size: <span id='rss'         class='dataValue'></span>
        p V8 engine heap total:     <span id='heapTotal'   class='dataValue'></span>
        p V8 engine heap used:      <span id='heapUsed'    class='dataValue'></span>

      .one-third.column
        
        h3 Environment
        
        p Architecture:             <span id='arch'        class='dataValue'></span>
        p Platform:                 <span id='platform'    class='dataValue'></span>
        p Node Version:             <span id='nodeVersion' class='dataValue'></span>

block scripts
  script(src="javascripts/underscore-min.js")
  script(src='javascripts/backbone-min.js')
  script(src="/socket.io/socket.io.js")
  
  script

    $(document).ready(function() {
      var serverStatusModel = new Backbone.Model();

      serverStatusModel.on("change:timeUTC", function(model, newValue) {
        $('#timeUTC').text(newValue);
      });

      serverStatusModel.on("change:rss", function (model, newValue) {
        $('#rss').text(newValue);
      });

      serverStatusModel.on("change:heapTotal", function (model, newValue) {
        $('#heapTotal').text(newValue);
      });
      
      serverStatusModel.on("change:heapUsed", function (model, newValue) {
        $('#heapUsed').text(newValue);
      });
      
      serverStatusModel.on("change:uptime", function (model, newValue) {
        $('#uptime').text(newValue);
      });
      
      serverStatusModel.on("change:arch", function (model, newValue) {
        $('#arch').text(newValue);
      });
      
      serverStatusModel.on("change:platform", function (model, newValue) {
        $('#platform').text(newValue);
      });
      
      serverStatusModel.on("change:nodeVersion", function (model, newValue) {
        $('#nodeVersion').text(newValue);
      });
      
      serverStatusModel.on("change:clientCount", function (model, newValue) {
        $('#clientCount').text(newValue);
      });
      
      var socket = io.connect();
      socket.on('serverStatus', function (ss) {
        serverStatusModel.set(ss);
      });
    });
